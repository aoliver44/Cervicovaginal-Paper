y = '') + guides(fill=guide_legend(title="Bacterial Species")) +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
plot_grid(l_crispatus, l_iners, g_vaginalis, other, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,1))
# set working directory & load files
setwd("~/Google Drive File Stream/My Drive/Github/Cervicovaginal-Paper/data/")
set.seed(999)
# Sequence Data: read in sequence data so that samples are in the first column,
# and all other columns are the taxa
midas <- read.csv("16S_rarefied.txt", check.names = FALSE, sep = "\t", row.names = NULL, header = T)
# Metadata if you have it!
metadata <- read.csv("whiteson_metadata10_cvx6x.txt",
sep = "\t", header = T)
midas_melt <- melt(midas, id.vars = "taxonomy") %>%
rename(., Subject_ID = variable) %>%
separate(., col = taxonomy, into = c("L1","L2","L3","L4","L5","L6","L7"), sep = "\\;", remove = T, extra = "drop")
# Make sure the rel abundance or counts are numeric
midas_melt$value <- as.numeric(midas_melt$value)
# Add in the metadata, make sure you merge on the correct columns!
midas_melt <- merge(metadata, midas_melt, by.x = "wSampleID", by.y = "Subject_ID")
# Summarize by L6 genus (or any other taxa group)...
# if you change make sure you change L6 and prefix (^g_)
# this is also grabbing the top 11 taxa
midas_summarize <- midas_melt %>%
group_by(., L7) %>%
filter(str_detect(L7, "s_")) %>%
summarise(., top_bacteria = sum(value)) %>%
arrange(., desc(top_bacteria)) %>% slice(., 1:11)
# group the main players (top 11) together into a list
high_abundance <- split(midas_summarize$L7, 1:NROW(midas_summarize))
# change everything that is not a main player into a other catagory
midas_melt$L7[midas_melt$L7 %in% high_abundance != "TRUE"] <- "other"
stephen_12 <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928')
sarah_color <- c("#7F0A57", "#A64685", "#CD9ABB", "#0B447A", "#3F77AC", "#4176AA", "#74A9DD", "#007976", "#39A9AB", "#71CFC5", "#72D3C6", "#007947", "#3BAA78")
cb12 <- c("#6973d8","#45c097",
"#bda73a",
"#553484",
"#67a54f",
"#b753a1",
"#ba4b7d",
"#af833d",
"#628dd4",
"#b95136",
"#bc7ed4",
"grey")
l_crispatus <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "L. crispatus")) +
aes(x = as.factor(TrimesterNo), fill = L7, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
labs(x = '',
y = 'Relative Abundance') + theme(legend.position = "none") +
ggtitle("L. crispatus") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
l_iners <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "L. iners")) +
aes(x = as.factor(TrimesterNo), fill = L7, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("L. iners") +
labs(x = 'Trimester',
y = '') + theme(legend.position = "none") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
g_vaginalis <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "G. vaginalis")) +
aes(x = as.factor(TrimesterNo), fill = L7, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("G. vaginalis") +
labs(x = '',
y = '') + theme(legend.position = "none") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
other <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "other")) +
aes(x = as.factor(TrimesterNo), fill = L7, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("other") +
labs(x = '',
y = '') + guides(fill=guide_legend(title="Bacterial Species")) +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
plot_grid(l_crispatus, l_iners, g_vaginalis, other, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,1))
dev.off()
plot_grid(l_crispatus, l_iners, g_vaginalis, other, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,1))
plot_grid(l_crispatus, l_iners, g_vaginalis, other, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,1))
dev.off()
dev.off()
plot_grid(l_crispatus, l_iners, g_vaginalis, other, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,1))
# Sequence Data: read in sequence data so that samples are in the first column,
# and all other columns are the taxa
midas <- read.csv("16S_rarefied.txt", check.names = FALSE, sep = "\t", row.names = NULL, header = T)
# Metadata if you have it!
metadata <- read.csv("whiteson_metadata10_cvx6x.txt",
sep = "\t", header = T)
midas_melt <- melt(midas, id.vars = "taxonomy") %>%
rename(., Subject_ID = variable) %>%
separate(., col = taxonomy, into = c("L1","L2","L3","L4","L5","L6","L7"), sep = "\\;", remove = T, extra = "drop")
# Make sure the rel abundance or counts are numeric
midas_melt$value <- as.numeric(midas_melt$value)
# Add in the metadata, make sure you merge on the correct columns!
midas_melt <- merge(metadata, midas_melt, by.x = "wSampleID", by.y = "Subject_ID")
# Summarize by L6 genus (or any other taxa group)...
# if you change make sure you change L6 and prefix (^g_)
# this is also grabbing the top 11 taxa
midas_summarize <- midas_melt %>%
group_by(., L6) %>%
filter(str_detect(L6, "s_")) %>%
summarise(., top_bacteria = sum(value)) %>%
arrange(., desc(top_bacteria)) %>% slice(., 1:11)
# group the main players (top 11) together into a list
high_abundance <- split(midas_summarize$L6, 1:NROW(midas_summarize))
# change everything that is not a main player into a other catagory
midas_melt$L6[midas_melt$L6 %in% high_abundance != "TRUE"] <- "other"
stephen_12 <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928')
sarah_color <- c("#7F0A57", "#A64685", "#CD9ABB", "#0B447A", "#3F77AC", "#4176AA", "#74A9DD", "#007976", "#39A9AB", "#71CFC5", "#72D3C6", "#007947", "#3BAA78")
cb12 <- c("#6973d8","#45c097",
"#bda73a",
"#553484",
"#67a54f",
"#b753a1",
"#ba4b7d",
"#af833d",
"#628dd4",
"#b95136",
"#bc7ed4",
"grey")
l_crispatus <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "L. crispatus")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
labs(x = '',
y = 'Relative Abundance') + theme(legend.position = "none") +
ggtitle("L. crispatus") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
l_iners <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "L. iners")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("L. iners") +
labs(x = 'Trimester',
y = '') + theme(legend.position = "none") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
g_vaginalis <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "G. vaginalis")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("G. vaginalis") +
labs(x = '',
y = '') + theme(legend.position = "none") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
other <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "other")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("other") +
labs(x = '',
y = '') + guides(fill=guide_legend(title="Bacterial Species")) +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
plot_grid(l_crispatus, l_iners, g_vaginalis, other, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,1))
# Sequence Data: read in sequence data so that samples are in the first column,
# and all other columns are the taxa
midas <- read.csv("16S_rarefied.txt", check.names = FALSE, sep = "\t", row.names = NULL, header = T)
# Metadata if you have it!
metadata <- read.csv("whiteson_metadata10_cvx6x.txt",
sep = "\t", header = T)
midas_melt <- melt(midas, id.vars = "taxonomy") %>%
rename(., Subject_ID = variable) %>%
separate(., col = taxonomy, into = c("L1","L2","L3","L4","L5","L6","L7"), sep = "\\;", remove = T, extra = "drop")
# Make sure the rel abundance or counts are numeric
midas_melt$value <- as.numeric(midas_melt$value)
# Add in the metadata, make sure you merge on the correct columns!
midas_melt <- merge(metadata, midas_melt, by.x = "wSampleID", by.y = "Subject_ID")
# Summarize by L6 genus (or any other taxa group)...
# if you change make sure you change L6 and prefix (^g_)
# this is also grabbing the top 11 taxa
midas_summarize <- midas_melt %>%
group_by(., L6) %>%
filter(str_detect(L6, "g_")) %>%
summarise(., top_bacteria = sum(value)) %>%
arrange(., desc(top_bacteria)) %>% slice(., 1:11)
# group the main players (top 11) together into a list
high_abundance <- split(midas_summarize$L6, 1:NROW(midas_summarize))
# change everything that is not a main player into a other catagory
midas_melt$L6[midas_melt$L6 %in% high_abundance != "TRUE"] <- "other"
stephen_12 <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928')
sarah_color <- c("#7F0A57", "#A64685", "#CD9ABB", "#0B447A", "#3F77AC", "#4176AA", "#74A9DD", "#007976", "#39A9AB", "#71CFC5", "#72D3C6", "#007947", "#3BAA78")
cb12 <- c("#6973d8","#45c097",
"#bda73a",
"#553484",
"#67a54f",
"#b753a1",
"#ba4b7d",
"#af833d",
"#628dd4",
"#b95136",
"#bc7ed4",
"grey")
l_crispatus <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "L. crispatus")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
labs(x = '',
y = 'Relative Abundance') + theme(legend.position = "none") +
ggtitle("L. crispatus") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
l_iners <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "L. iners")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("L. iners") +
labs(x = 'Trimester',
y = '') + theme(legend.position = "none") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
g_vaginalis <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "G. vaginalis")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("G. vaginalis") +
labs(x = '',
y = '') + theme(legend.position = "none") +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
other <- ggplot(data = subset(midas_melt, midas_melt$Taxabarplot_catagories == "other")) +
aes(x = as.factor(TrimesterNo), fill = L6, weight = value) +
geom_bar(position = position_fill()) +
theme_bw() +
facet_grid(cols = vars(PatientID), space = "free", scales = "free") + scale_fill_manual(values = cb12) +
ggtitle("other") +
labs(x = '',
y = '') + guides(fill=guide_legend(title="Bacterial Species")) +
scale_y_continuous(labels = scales::percent_format()) +
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(), plot.margin = unit(c(0.1, 0, 0.1, 0.1), "cm"))
plot_grid(l_crispatus, l_iners, g_vaginalis, other, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,1))
metadata_fungi <- metadata
metadata_fungi$PatientID <- factor(metadata$PatientID,levels=c("1088", "1120", "1157", "1191", "1062" , "1111", "1126" ,"1137", "1180", "1198","1222", "1018", "1089", "1146", "1103", "1202"), ordered = T)
metadata_melt <- melt(metadata_fungi, measure.vars = "DomOTU_ITS2", id.vars = c("PatientID", "TrimesterNo", "Taxabarplot_catagories"))
metadata_melt$value <- gsub("none", "Did not amplify", metadata_melt$value)
ggplot(data = metadata_melt,
aes(x = as.factor(TrimesterNo), y= as.factor(value))) +
geom_tile(aes(fill = as.factor(value)), stat = "identity") +
theme_bw(base_size = 14) +
ggtitle("") +
theme(legend.position = "none") +
labs(x = '', y = '') +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(.~ PatientID, scales = "free_x") +
scale_fill_manual(values = c("purple", "blue", "grey")) +
guides(fill=guide_legend(title="ITS Taxonomy"))
#### Seperately (ITS) #########
Lc_its <- ggplot(data = subset(metadata_melt, metadata_melt$Taxabarplot_catagories == "L. crispatus"),
aes(x = as.factor(TrimesterNo), y= as.factor(value))) +
geom_tile(aes(fill = as.factor(value))) +
theme_bw() +
ggtitle("L. crispatus ITS") +
theme(legend.position = "none") +
labs(x = '', y = '') +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(PatientID), scales = "free_x") +
scale_fill_manual(values = c("purple", "blue", "grey")) +
guides(fill=guide_legend(title="ITS Taxonomy"))
Li_its <- ggplot(data = subset(metadata_melt, metadata_melt$Taxabarplot_catagories == "L. iners"),
aes(x = as.factor(TrimesterNo), y= as.factor(value))) +
geom_tile(aes(fill = as.factor(value))) +
theme_bw() +
labs(x = '', y = '') +
ggtitle("L. iners ITS") +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(PatientID), scales = "free_x") +
scale_fill_manual(values = c("blue", "grey")) +
guides(fill=guide_legend(title="ITS Taxonomy"))
gv_its <- ggplot(data = subset(metadata_melt, metadata_melt$Taxabarplot_catagories == "G. vaginalis"),
aes(x = as.factor(TrimesterNo), y= as.factor(value))) +
geom_tile(aes(fill = as.factor(value))) +
theme_bw() +
labs(x = '', y = '') +
ggtitle("G. vaginalis ITS") +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(PatientID), scales = "free_x") +
scale_fill_manual(values = c("blue", "grey")) +
guides(fill=guide_legend(title="ITS Taxonomy"))
other_its <- ggplot(data = subset(metadata_melt, metadata_melt$Taxabarplot_catagories == "other"),
aes(x = as.factor(TrimesterNo), y= as.factor(value))) +
geom_tile(aes(fill = as.factor(value))) +
theme_bw() +
labs(x = '', y = '') +
ggtitle("other ITS") +
theme(legend.position = "none") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(cols = vars(PatientID), scales = "free_x") +
scale_fill_manual(values = c("blue", "grey")) +
guides(fill=guide_legend(title="ITS Taxonomy"))
plot_grid(Lc_its, Li_its, gv_its, other_its, labels = NULL, nrow = 1, rel_widths = c(0.7,1,0.5,0.5), rel_heights = c(2.1,0.7,0.7,0.7))
setwd("~/Google Drive File Stream/My Drive/CVF Samples/R_stuff/")
brandon <- read.csv2("whiteson_metadata10_cvx6x.txt", sep = "\t", check.names = F)
brandon$TrimesterNo <- as.factor(brandon$TrimesterNo)
brandon$pc1bc_3 <- as.numeric(brandon$pc1bc_3)
brandon$PatientID <- as.factor(brandon$PatientID)
anova(lme(pc1bc_3 ~ dominantOrg, data = brandon, random = ~ 1|PatientID, cor=corAR1()))
setwd("~/Google Drive File Stream/My Drive/Github/Cervicovaginal-Paper/data/")
brandon <- read.csv2("whiteson_metadata10_cvx6x.txt", sep = "\t", check.names = F)
brandon$TrimesterNo <- as.factor(brandon$TrimesterNo)
brandon$pc1bc_3 <- as.numeric(brandon$pc1bc_3)
brandon$PatientID <- as.factor(brandon$PatientID)
anova(lme(pc1bc_3 ~ dominantOrg, data = brandon, random = ~ 1|PatientID, cor=corAR1()))
View(brandon)
shift
shift <- ggplot() +
geom_point(data = brandon, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "grey", alpha = 0.3, show.legend = FALSE) +
geom_line(data = brandon, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "grey", alpha = 0.3, show.legend = FALSE) +
geom_point(data = major_shifts1, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "mediumorchid4", show.legend = FALSE) +
geom_line(data = major_shifts1, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "mediumorchid4", show.legend = FALSE) +
labs(x = 'Trimester', y = 'PC1') +
theme_classic(base_size = 14) #+ scale_color_manual(values=c("cyan4", "springgreen1"))
major_shifts <- subset(brandon, brandon$PairID %in% c("P222", "P180", "P103"))
View(major_shifts)
shift <- ggplot() +
geom_point(data = brandon, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "grey", alpha = 0.3, show.legend = FALSE) +
geom_line(data = brandon, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "grey", alpha = 0.3, show.legend = FALSE) +
geom_point(data = major_shifts1, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "mediumorchid4", show.legend = FALSE) +
geom_line(data = major_shifts1, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "mediumorchid4", show.legend = FALSE) +
labs(x = 'Trimester', y = 'PC1') +
theme_classic(base_size = 14) #+ scale_color_manual(values=c("cyan4", "springgreen1"))
major_shifts1 <- subset(brandon, brandon$PairID %in% c("P222", "P180", "P103", "P062", "P146", "P126"))
shift <- ggplot() +
geom_point(data = brandon, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "grey", alpha = 0.3, show.legend = FALSE) +
geom_line(data = brandon, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "grey", alpha = 0.3, show.legend = FALSE) +
geom_point(data = major_shifts1, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "mediumorchid4", show.legend = FALSE) +
geom_line(data = major_shifts1, aes(x = TrimesterNo, y = pc1bc_3, group = PatientID), color = "mediumorchid4", show.legend = FALSE) +
labs(x = 'Trimester', y = 'PC1') +
theme_classic(base_size = 14) #+ scale_color_manual(values=c("cyan4", "springgreen1"))
shift
anova(lme(pc1bc_3 ~ TrimesterNo, data = major_shifts1, random = ~ 1|PatientID, cor=corAR1()))
anova(lme(pc1bc_3 ~ TrimesterNo, data = brandon, random = ~ 1|PatientID, cor=corAR1()))
# set wd
setwd("~/Google Drive File Stream/My Drive/CVF Samples/R_stuff/")
# import data and transpose
raw_data <- read.table("GC_CVF_std_bySample_nounannotated.txt", sep = "\t", row.names = 1, header = T)
bact_comparisons <- list(c("L. crispatus", "G. vaginalis"), c("L. crispatus", "L. iners"), c("L. crispatus", "L.sp.other"))
indole <- ggplot(data = raw_data) +
aes(x = `X16S_dominant`, y = as.numeric(as.character(indole.3.lactate)), fill = `X16S_dominant`) +
geom_boxplot() + geom_jitter(width = 0.2) +
labs(x = '',
y = 'Indole-3-lactate abundance') +
theme_bw(base_size = 14) + scale_fill_manual(values=c("goldenrod1", "springgreen3", "turquoise3", "grey60")) +
theme(legend.position = "none")
indole
indole <- ggplot(data = raw_data) +
aes(x = `X16S_dominant`, y = as.numeric(as.character(indole.3.lactate)), fill = `X16S_dominant`) +
geom_boxplot() + geom_jitter(width = 0.2) +
labs(x = '',
y = 'Indole-3-lactate abundance') +
theme_bw(base_size = 14) + scale_fill_manual(values=c("goldenrod1", "springgreen3", "turquoise3", "grey60")) +
theme(legend.position = "none") + stat_summary(fun.data = give.n, geom = "text", fun.y = median,
position = position_dodge(width = 0.75))
give.n <- function(x){
return(c(y = median(x)*1.05, label = length(x)))
# experiment with the multiplier to find the perfect position
}
indole <- ggplot(data = raw_data) +
aes(x = `X16S_dominant`, y = as.numeric(as.character(indole.3.lactate)), fill = `X16S_dominant`) +
geom_boxplot() + geom_jitter(width = 0.2) +
labs(x = '',
y = 'Indole-3-lactate abundance') +
theme_bw(base_size = 14) + scale_fill_manual(values=c("goldenrod1", "springgreen3", "turquoise3", "grey60")) +
theme(legend.position = "none") + stat_summary(fun.data = give.n, geom = "text", fun.y = median,
position = position_dodge(width = 0.75))
indole
# bray curtis saliva urine analysis
setwd("~/Google Drive File Stream/My Drive/CVF Samples/Manuscript/Data/Bray_distances_saliva_urine/")
saliva <- read.csv("Saliva_bc_distances.txt", sep = "\t")
ggplot(data = saliva) +
aes(x = direction, y = Avg_bc, fill = direction) +
geom_boxplot() +
labs(y = 'Average Bray Curtis Similarity', x = "") +
theme_bw(base_size = 16) +
facet_grid(Sample.Type ~ Chromatog) +
stat_compare_means(method = "t.test", paired = T, label.x.npc = 0.8) +
theme(legend.position = "none")
ggplot(data = saliva) +
aes(x = direction, y = Avg_bc, fill = direction) +
geom_boxplot() +
labs(y = 'Average Bray Curtis Similarity', x = "") +
theme_bw(base_size = 16) +
facet_grid(Sample.Type ~ Chromatog) +
stat_compare_means(method = "wilcox", paired = T, label.x.npc = 0.8) +
theme(legend.position = "none")
shapiro.test(saliva$Avg_bc)
tmp <- subset(saliva, saliva$Sample.Type == "Saliva")
tmp <- subset(saliva, saliva$Sample.Type == "saliva")
tmp <- subset(saliva, saliva$Sample.Type == "SALIVA")
shapiro.test(tmp$Avg_bc)
tmp1 <- subset(tmp, tmp$Chromatog == "GC")
shapiro.test(tmp1$Avg_bc)
tmp1 <- subset(tmp, tmp$Chromatog == "LC")
shapiro.test(tmp1$Avg_bc)
tmp <- subset(saliva, saliva$Sample.Type == "URINE")
tmp1 <- subset(tmp, tmp$Chromatog == "LC")
shapiro.test(tmp1$Avg_bc)
tmp1 <- subset(tmp, tmp$Chromatog == "GC")
shapiro.test(tmp1$Avg_bc)
source("~/Google Drive File Stream/My Drive/Github/Fiber-Analysis/scripts/Generate_basic_env.R")
library(reshape2)
library(ggplot2)
library(tidyverse)
# now do a little stuff outside of R, for the final taxonomy stuff
out_melted <- read.csv("~/Google Drive File Stream/My Drive/Github/Fiber-Analysis/data/taxonomy_melted_rel_abund.tsv", sep = "\t", header = T)
Genus_melted <- out_melted %>% filter(., L4 != "") %>% group_by(L4, variable) %>% summarise(genus_sum = sum(value))
taxonomy_melt_meta <- merge(Genus_melted, metadata, by.x = "variable", by.y = "Metagenome")
View(Genus_melted)
View(taxonomy_melt_meta)
taxonomy_melt_meta %>% group_by(., variable) %>% summarise(., count = length(variable))
n_distinct(taxonomy_melt_meta$variable)
# load libraries
library(readxl)
library(ggplot2)
library(reshape2)
library(cowplot)
library(tidyverse)
# set working directory & load files
setwd("~/Google Drive File Stream/My Drive/Github/Cervicovaginal-Paper/data/")
set.seed(999)
# Sequence Data: read in sequence data so that samples are in the first column,
# and all other columns are the taxa
midas <- read.csv("16S_rarefied.txt", check.names = FALSE, sep = "\t", row.names = NULL, header = T)
# Metadata if you have it!
metadata <- read.csv("whiteson_metadata10_cvx6x.txt",
sep = "\t", header = T)
# metagenomics
midas <- t(read.csv("metagenomics.txt", check.names = FALSE, sep = "\t", row.names = 1, header = T))
metagenomics <- melt(midas)
tmp <- metagenomics %>% mutate(., Var3 = ifelse(value < 30, "other", as.character(Var1)))
tmp2 <- tmp %>% group_by(., Var2, Var3) %>% summarise(., abundance = sum(value))
tmp3 <- merge(metadata, tmp2, by.x = "UCIID", by.y = "Var2")
ggplot(data = tmp3) +
aes(x = TrimesterNo, weight = abundance, fill = Var3) +
geom_bar() +
theme_bw() +
facet_grid(.~PatientID) +
scale_fill_manual(values = stephen_12) +
labs(x = 'Trimester', y = 'Relative Abundance')
# nice color schemes!
stephen_12 <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928')
ggplot(data = tmp3) +
aes(x = TrimesterNo, weight = abundance, fill = Var3) +
geom_bar() +
theme_bw() +
facet_grid(.~PatientID) +
scale_fill_manual(values = stephen_12) +
labs(x = 'Trimester', y = 'Relative Abundance')
cb27 <- c("#dd7f60", "#746dd8", "#7daf3d", "#c864c5", "#6cb558", "#4f388a", "#b9b337", "#5083de", "#d38a32", "#668cd1", "#c2562e", "#43c8ac", "#ca427f", "#5bc47e", "#852c78", "#b7b457", "#b682d3", "#3d7831", "#d975b5", "#777425", "#892c5a", "#c2914b", "#94273d",
"#de6b87", "#87361a", "#d5474f", "#d06163")
ggplot(data = tmp3) +
aes(x = TrimesterNo, weight = abundance, fill = Var3) +
geom_bar() +
theme_bw() +
facet_grid(.~PatientID) +
scale_fill_manual(values = cb27) +
labs(x = 'Trimester', y = 'Relative Abundance')
julio_color <- c("#003f5c", "#2f4b7c", "#665191", "#a05195", "#d45087", "#f95d6a", "#ff7c43", "#ffa600", "#7f0a57", "#cd9abb", "#39a9ab", "#71cfc5", "#007947", "#bebebe")
ggplot(data = tmp3) +
aes(x = TrimesterNo, weight = abundance, fill = Var3) +
geom_bar() +
theme_bw() +
facet_grid(.~PatientID) +
scale_fill_manual(values = julio_color) +
labs(x = 'Trimester', y = 'Relative Abundance')
ggplot(data = tmp3) +
aes(x = TrimesterNo, weight = abundance, fill = Var3) +
geom_bar() +
theme_bw() +
facet_grid(.~PatientID) +
scale_fill_manual(values = stephen_12) +
labs(x = 'Trimester', y = 'Relative Abundance')
